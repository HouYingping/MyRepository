#include<iostream>
#include<string>
using namespace std;
//解决通过父类指针释放子类对象的问题；都需要有具体的实现
// 不同点是：有虚函数的类可以实例化，而有纯虚函数的抽象类不可以

class Animal {
public:
	Animal() {
		cout << "Animal的构造函数" << endl;
	} 
	virtual void speak() = 0;
	/*virtual ~Animal() {
		cout << "Animal的虚析构函数" << endl;
	}*/
	//纯虚析构   需要声明也需要实现
	virtual ~Animal() = 0;
};
Animal::~Animal() {
	cout << "Animal的纯虚析构函数" << endl;
}
class Cat : public Animal
{
public:
	Cat(string name) {
		m_name = new string(name);
	}
	virtual void speak() {
		cout << *m_name << "小猫在说话" << endl;
	}
	~Cat() {
		cout << "Cat的析构函数" << endl;
		if (m_name != NULL) {
			delete m_name;
			m_name = NULL;
		}
	}
	string *m_name;
};
void test() {
	Animal *animal = new Cat("Tom");
	animal->speak();
	delete animal;
}

int main() {
	test();
	system("pause");
	return 0;
}
