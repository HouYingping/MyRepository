/*
cout<< "AB"+"CD"<<endl;		执行这样的语句是要报错的
string s = "员工"+"A";		这样定义出来的样子并不是你所想象的样子
rand()	函数生成的随机小数范围在 0~32767
容器迭代器有一个需要注意的地方，之前以为迭代器自增仍是有筛选的，但其实不是，只是移到了紧挨着的元素，说白了返回的就是个“位置”
取余和取模是不同的，详细看Python补充

整数和浮点数运算结果还是整数
内建函数对象使用时的区别：	sort(v.begin();v.end();greater<int>())		multimap(double,int,greater<double>)	方法参数需要是对象，容器定义类即可

结构体和类的异同
相同：C++与C在结构体不同之处C++的结构体中可以有成员函数,可以从别的类继承，可以被别的类继承，可以实现多态，可以有虚函数
	类中的非static成员函数有this指针，（struct的成员函数一样具有this指针）
	C中的结构体是数据和算法分离的，而C++中结构体和类是两者相结合的。
不同：结构体中默认情况下的成员是public，而类中的默认情况下的成员是private，
	类的关键字class 可以作为模板的关键字
	结构体可以通过A a = {...} 就行批量初始化，但是一旦结构体中有了构造函数或者是虚函数，那么也会变得与类一样，
	这其实体现了对于两者的一般使用方法，
		结构体——> 数据实体（一般，也可以是对象实体，但是一般不这么用而已）
		类——>对象实体
	这也是结构体和类在默认情况下数据访问控制不同的原因
*/
