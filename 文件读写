#include<iostream>
#include<string>
// 1、
#include<fstream>		//可以操作文件的头文件
using namespace std;
/*
文件：
	文本文件		文件以文本的ASCII码形式存储在计算机中
	二进制文件			比较恶心，读方式和写方式必须一致，否则易出现错误，尤其是自定义类
操作文件的三大类：
	ofstream:	写操作
	ifstream	读操作
	fstream		读写操作
文件打开方式：
	ios::in		读
	ios::out	写
	ios::ate	初始位置：文件尾
	ios::app	追加方式写文件
	ios::trunc	如果文件存在先删除，再创建
	ios::binary	二进制方式
ifs.seekg(0,ios::end);
int file_size = ifs.readg();		就可以知道文件的大小
*/

/*
文件内部指针			记录文件的读写位置	， 游标
tellg()						返回读取文件指针的当前位置
tellp()						返回写入文件指针的当前位置
seekg(指针偏移量)			设置读取文件时指针的位置
seekg(指针偏移量,参考位置)	设置读取文件指针到相对的位置
seekp(指针偏移量)			设置写入文件时指针的位置
seekp(指针偏移量,参考位置)	设置写入文件时指针相对的位置
	参考位置：	ios::beg		ios::cur		ios::end
*/
void write() {
	//2、创建流对象
	ofstream ofs;
	//3、打开文件
	ofs.open("E:\\myCode\\C++\\day02\\test.txt", ios::out);
	//4、读写数据
	ofs << "hyp is a good boy!" << endl;
	char str[] = "hyp is handsome";
	ofs.write(str, sizeof(str));
	ofs.put('Y');			// 写入单个字符
	//5、关闭文件
	ofs.close();
}
void read() {
	//读文件
	//2、创建流对象
	ifstream ifs;
	//3、打开文件
	ifs.open("E:\\myCode\\C++\\day02\\test.txt", ios::in);
	if (!ifs.is_open()) {
		cout << "文件名写错了或文件路径错了" << endl;
		return;
	}
	else {
		//4、读数据
		////(1)
		char buf[1024] = { 0 };
		while (ifs>>buf)		// 读取到“空白符号（非空）”就会停下来
		{	
			//printf("执行了");
			cout << buf << endl;
		}

		// 还可以通过good()判断读取情况
		/*if (!ifs.good()) {		或者		ifs.bad()	ifs.fail()		0/1
			return;
		}*/

		//判断是否读取到文件末尾
		// ifs.eof();		0/1


		//(2)
		//char buf[1024] = { 0 };
		//while (ifs.getline(buf, sizeof(buf)))		//读取的数据放入buf		最多读多少个字节的数据
		//{	
		//	cout << buf << endl;
		//}

		//(3)
		/*string buf;
		while ( getline(ifs,buf) )
		{
			cout << buf << endl;
		}*/

		//(4)	不建议用	一个字符一个字符去读
		//char c;
		//while ((c = ifs.get())!=EOF)	// EOF  end of file
		//{
		//	cout << c;
		//}

		//5、关闭文件
		ifs.close();
	}
}
class Person {
public:
	int age;
	char name[64];		// 不适用string 类型，易出现错误
};
void writeBinary() {
	/*ofstream ofs;
	ofs.open("E:\\myCode\\C++\\day02\\test.txt", ios::out | ios::binary);*/
	ofstream ofs("E:\\myCode\\C++\\day02\\test.txt", ios::out | ios::binary);
	Person p = {23,"xjc"};
	ofs.write((const char *)&p, sizeof(Person));	//将写入对象转成“字符地址”（这里并不局限于字符数组或者字符串）	写入的数据大小
	ofs.close();
}
void readBinary() {
	ifstream ifs("E:\\myCode\\C++\\day02\\test.txt", ios::in | ios::binary);
	if (!ifs) {			// 如果文件打开失败，那么对象为空（NULL）
		cout << "文件名错误或者地址错误" << endl;
		return;
	}
	else {
		Person p;
		ifs.read((char *)&p, sizeof(Person));
		cout << "姓名：" << p.name << " 年龄：" << p.age << endl;
	}
	ifs.close();
}
int main() {
	//write(); 
	read();
	//writeBinary();
	//readBinary();
	system("pause");
	return 0;
}
