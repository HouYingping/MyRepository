#include<iostream>
#include<string>
using namespace std;
/*
new , 将数据建立在堆中，便于管理
delete， new出来的数据可以通过delete手动释放
new主要用于返回长期且便于管理的数据，例如替代函数的局部变量结果
*/
class Person {
public:
	string name;
	int age;
};
int main(){
	int* num = new int(10);
	int* nums = new int[50];
	int nums2[50];				// 这样定义出来的数组名本身也是一个指针
	int* ptr = nums2;			// 验证

	int** pointer = &nums;		// 指向指针的指针
	
	Person* p = new Person{ "hyp" ,23};		// 默认是按照变量定义的顺序记性初始化
	cout << "size of num：" << sizeof(*num) << endl;
	nums[20] = 20;
	nums[10] = 10;
	cout << "size of nums：" << sizeof(*nums) << endl;
	cout << sizeof(nums) << endl;						// 通过指针无法获取数组的长度,可以使用引用
	cout << "size of nums2：" << sizeof(nums2) << endl;
	cout << "size of p：" << sizeof(*p) << endl;
	cout << p->age << endl;

	system("pause");
	return 0;
}
