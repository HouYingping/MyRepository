#include<iostream>
#include<string>
using namespace std;
class Person {
public:
	//this指针的本质是一个指针常量
	// 在成员函数后面加const修饰的是this指向，让指针常量所指向的值也不能修改，这就是常函数
	//const Person * const this;	
	void showPerson() const			//就是这个样子		(常函数)
	{
		//this->m_Age = 100;		//常函数内不可以修改成员属性
		//this = NULL;
		m_B = 10;					//如果要想修改，加关键字mutable
		cout << "这里是常函数" << endl;
	}
	void func() {
		cout << "这里是普通成员函数" << endl;
	}
	int m_Age;
	mutable int m_B;		//特殊变量，即使在常函数中，也可以修改这个值,加关键字mutable
};
void test() {
	Person p;
	p.showPerson();

	//常对象
	const Person p2;
	//p2.m_Age = 50;
	p2.m_B = 1000;		//特殊，在长对象下也可以修改
	//常对象只能调用常函数
	p2.showPerson();
	p.func();
	//p2.func();		// 报错，不能执行

}
int main() {
	test();
	system("pause");
	return 0;
}
