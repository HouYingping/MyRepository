#include <iostream>
using namespace std;
int mian() {
	//常量指针，指针的指向可以修改，但是指针指向的值不可以修改
	int a = 10;
	int b = 10;
	const int *p1 = &a;
	//*p1 = 20;		//报错
	p1 = &a;

	//指针常量，指针指向的值不可以修改，但是指向的值可以修改
	int * const p2 = &b;
	*p2 = 20;
	//p2 = &a;		 //报错

	//const既修饰指针，又修饰常量，指针的指向和指向的值都不可以改变
	const int * const p3 = &b; 
	//*p3 = 20;		 //报错
	//p3 = &a;		 //报错

	//在调用函数时使用地址传递可以实现在原数据上进行修改，并不需要将实参完整复制，从而节省了内存空间，
	// 但是，也伴随着数据被误操作而错误修改的风险，此时也可以使用const进行限制，但是这样的话和值传递
	//	又有什么区别呢？

	system("pause");
	return 0;
}
