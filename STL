
/*
STL ,standard template library	,目的，提高代码的复用性
六大组件：
	容器：各种数据结构，ventor、list、deque、set、map
	算法：常用算法，sort、find、copy、for_each
	迭代器：容器和算法之间的粘合剂
	仿函数：行为类似函数，可作为算法的某种策略
	适配器（配接器）：一种用来修饰容器或者方函数或迭代器接口的东西
	空间配置器：负责空间的配置和管理
*/
/*

容器分为序列式容器和关联式容器
序列式容器：强调值的排序，每个元素具有固定的位置
关联式容器：二叉树结构，各元素之间没有严格的物理上的顺序关系

算法：
	质变算法：运算过程中会更改区间内的元素的内容，例如拷贝、替换、删除等等
	非质变算法：不变，查，计数

迭代器
算法需要通过迭代器才能访问容器中的数据；每个容器都有专属的迭代器
(输入迭代器		只读访问		支持++、==、！，=
输出迭代器		只写访问		支持++
前向迭代器		读写，向前推进		支持++、==、！、=)
双向迭代器		读写，向前向后推进	支持++、--
随机访问迭代器	读写，跳跃访问任意数据，功能最强的迭代器	支持++、--、[n]、-n、<、<=、>、>=
*/

