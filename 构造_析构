//构造函数：主要作用在于创建对象时为对象的成员属性赋值，构造函数由编译器自动调用，无需手动执行
//析构函数：主要作用在于对象销毁前系统自动调用，执行一些清理工作
/*
构造：
    无返回值，也不需要些void
    名字与类名同
    可以有参数，因此可以发生重载
    只会被调用执行一次
析构：
    无返回值，也不需要些void
    名与类名同，在名称前加~
    无参数，不可重载
    只会被调用执行一次,在对象退出内存是会执行一次，在作用域程序执行完时会被执行一次
构造和析构如果不写，编译器会均默认提供一个空实现的函数
*/
#include<iostream>
#include<string>
using namespace std;

class Person{

public:
    string name;
    int age;
    Person(){
        name = "hyp";
        age = 18;
        cout<<"构造函数的调用"<<endl;
    }
    ~Person(){
        cout<<"析构函数的调用"<<endl;
    }
};
void strict(){
    Person p;
}
Person strict2(){
    Person p;
    return p;
}
int main(){
    //strict();           // 看析构函数的执行
    //strict2();
    Person p = strict2();
    system("pause");
    return 0;
}
