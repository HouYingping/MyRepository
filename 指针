#include <iostream>
using namespace std;
int main() {
	//指针，记录内存地址编号
	//定义
	int a = 10;
	int *p;
	p = &a;
	cout << "a的地址为：" << &a << endl;
	cout << "指针p的值：" << p << endl;
	
	//使用
	cout << "取p存的值：" << *p << endl;

	*p = 1000;			//	对内村进行修改
	cout << "a=" << a << endl;
	cout << "*p" << *p << endl;
	
	//指针所占的内存空间
	cout << "32位操作系统占指针4个字节 " << sizeof(p) << endl;
	cout << "sizeof(int *) " << sizeof(int *) << endl;
	cout << "sizeof(char *) " << sizeof(char *) << endl;
	cout << "sizeof(float *) " << sizeof(float *) << endl;
	cout << "sizeof(double *) " << sizeof(double *) << endl;
	cout << "sizeof(string *) " << sizeof(string *) << endl;
	cout << "64位操作系统指针占8个字节" << endl;

	//空指针，指针变量指向内存中编号为0的空间，
	//用与初始化指针变量，指针不知道指向哪儿好的时候可以指向空指针所指向的空间
	//空指针指向的内存是不可以访问的
	//0~255，是系统占用内存，不允许访问
	int *p1 = NULL;
	//*p1 = 100;		执行报错，不可用

	//野指针：指针变量指向非法的内存空间
	/*int *p2 = (int *)0x1100;
	cout << *p2 << endl;*/

	system("pause");
	return 0;
}#include <iostream>
using namespace std;
int main() {
	//指针，记录内存地址编号
	//定义
	int a = 10;
	int *p;
	p = &a;
	cout << "a的地址为：" << &a << endl;
	cout << "指针p的值：" << p << endl;
	
	//使用
	cout << "取p存的值：" << *p << endl;

	*p = 1000;			//	对内村进行修改
	cout << "a=" << a << endl;
	cout << "*p" << *p << endl;
	
	//指针所占的内存空间
	cout << "32位操作系统占指针4个字节 " << sizeof(p) << endl;
	cout << "sizeof(int *) " << sizeof(int *) << endl;
	cout << "sizeof(char *) " << sizeof(char *) << endl;
	cout << "sizeof(float *) " << sizeof(float *) << endl;
	cout << "sizeof(double *) " << sizeof(double *) << endl;
	cout << "sizeof(string *) " << sizeof(string *) << endl;
	cout << "64位操作系统指针占8个字节" << endl;

	//空指针，指针变量指向内存中编号为0的空间，
	//用与初始化指针变量，指针不知道指向哪儿好的时候可以指向空指针所指向的空间
	//空指针指向的内存是不可以访问的
	//0~255，是系统占用内存，不允许访问
	int *p1 = NULL;
	//*p1 = 100;		执行报错，不可用

	//野指针：指针变量指向非法的内存空间
	/*int *p2 = (int *)0x1100;
	cout << *p2 << endl;*/

	system("pause");
	return 0;
}
